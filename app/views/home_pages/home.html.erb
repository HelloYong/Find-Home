<% provide(:title, "Home") %>
<div class="container">
	<div class="map_container col-md-12"  id="map">
	</div>
	<div class="row">
		<div class="col-md-6">
			<input id="pac-input" class="col-md-6 controls form-control" type="text"
			    placeholder="Enter a location">
		</div>
		<div class="col-md-1">
			<a class='btn btn-primary pacbtn' data-toggle="modal" 
				data-direction='right' data-target="#loginModal">Login</a>
		</div>
		<div class="col-md-1">
			<a class='btn btn-primary pacbtn' data-toggle="modal" 
				data-direction='right' data-target="#signupModal">Signup</a>
		</div>
    </div>
</div>

<!-- Modal details-->
<div id="detailsModal" class="modal fade right" role="dialog">
  <div class="modal-dialog modal-dialog-details">
    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Modal Header</h4>
      </div>
      <div class="modal-body">
        <p>Some text in the modal.</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<!--login modal-->
<div id="loginModal" class="modal fade" role="dialog">
	<div class="modal-dialog">
    	<div class="modal-content">    
       	 	<!-- Header Section -->
        	<div class="modal-header">
		    	<a href="#" class="pull-right" data-dismiss="modal">×</a>
       	 	 	<h3>Please sign in</h3>
			</div>
       	 	<!-- Body Section -->
			<div class="modal-body">
          		<form class="form col-md-10">
	         		<input type="text" class="form-control input-lg" placeholder="Email" required autofocus />
					<br />
					<input type="password" class="form-control input-lg" placeholder="Password" required />
					<label class="checkbox"> <input type="checkbox"
	                	value="remember-me" /> Remember me
					</label>        
				<button class="btn btn-primary btn-lg btn-block">Sign In</button>
          	</form>
       </div>
       <!-- Footer Section -->
       <div class="modal-footer">
          <div class="col-md-12">
             <span class="pull-left"><a href="#">Forgot Password?</a></span>
             <span><a href="#">Register</a></span>
          </div>
       </div>
     </div>
  </div>
</div>

<!--signup modal-->
<div id="signupModal" class="modal fade" role="dialog">
	<div class="modal-dialog">
    	<div class="modal-content">    
       	 	<!-- Header Section -->
        	<div class="modal-header">
		    	<a href="#" class="pull-right" data-dismiss="modal">×</a>
       	 	 	<h3>Sign Up</h3>
			</div>
       	 	<!-- Body Section -->
			<div class="modal-body">
          		<form class="form col-md-10">
					<label class="control-label"  for="username">Username</label>
	         		<input type="text" class="form-control input-lg" required autofocus />
					<br />
					<label class="control-label"  for="email">email</label>
	         		<input type="text" class="form-control input-lg" required autofocus />
					<br />
					<label class="control-label"  for="password1">Password</label>
					<input type="password" class="form-control input-lg" required />
					<br />
					<label class="control-label"  for="password2">Confirmation</label>
					<input type="password" class="form-control input-lg" required />
					<br />
					<button class="btn btn-primary btn-lg btn-block">Sign Up</button>
          	</form>
       </div>
     </div>
  </div>
</div>


<script src="https://maps.googleapis.com/maps/api/js?signed_in=true&libraries=places&callback=initMap"
    async defer></script>
<script>
  function initMap() {
    var madisonPos = {lat: 43.0667, lng: -89.4000};
    var map = new google.maps.Map(document.getElementById('map'), {
      center: madisonPos,
		zoom: 8
    });
    var input = /** @type {!HTMLInputElement} */(
        document.getElementById('pac-input'));
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
    //map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);
    var autocomplete = new google.maps.places.Autocomplete(input);
    autocomplete.bindTo('bounds', map);
    var infowindow = new google.maps.InfoWindow({
      content: "contentString"
    });
    var marker = new google.maps.Marker({
      map: map,
      anchorPoint: new google.maps.Point(0, -29),
      position: madisonPos,
      title: 'Madison WI'
    });
    marker.addListener('click', function() {
      infowindow.open(map, marker);
    });
    autocomplete.addListener('place_changed', function() {
      infowindow.close();
      marker.setVisible(false);
      var place = autocomplete.getPlace();
      if (!place.geometry) {
        window.alert("Autocomplete's returned place contains no geometry");
        return;
      }
      // If the place has a geometry, then present it on a map.
      if (place.geometry.viewport) {
        map.fitBounds(place.geometry.viewport);
      } else {
        map.setCenter(place.geometry.location);
        map.setZoom(17);  // Why 17? Because it looks good.
      }
      marker.setIcon(/** @type {google.maps.Icon} */({
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(35, 35)
      }));
      marker.setPosition(place.geometry.location);
      marker.setVisible(true);
      var address = '';
      if (place.address_components) {
        address = [
          (place.address_components[0] && place.address_components[0].short_name || ''),
          (place.address_components[1] && place.address_components[1].short_name || ''),
          (place.address_components[2] && place.address_components[2].short_name || '')
        ].join(' ');
      }
        infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
        infowindow.open(map, marker);
      });
    // Sets a listener on a radio button to change the filter type on Places
    // Autocomplete.
    function setupClickListener(id, types) {
      var radioButton = document.getElementById(id);
      radioButton.addEventListener('click', function() {
        autocomplete.setTypes(types);
      });
    }
  }
</script>
